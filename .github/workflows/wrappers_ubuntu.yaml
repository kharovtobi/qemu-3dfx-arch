# Wrapper YAML
# Line wrap recommended
# Don't forget to change variables every QEMU update!
# make this cuz some gcc error probably
name: Build Wrappers

on:
  - workflow_dispatch
  
jobs:
   Wrappers:
            runs-on: ubuntu-latest
            env:
             pkgver: '9.2.0'
            steps:
              - name: Checkout repo
                uses: actions/checkout@v4
                
              - name: Install dependencies
                uses: ConorMacBride/install-package@v1
                with:
                  apt: >
                    meson
                    binutils-mips-linux-gnu
                    ninja-build
                    bsdmainutils
                    build-essential
                    libaudiofile-dev
                    binutils-mingw-w64-i686
                    libdigest-sha-perl
                    mingw-w64-tools
                    libsdl2-dev
                    libusb-1.0-0-dev
                    libfl2
                    libfl-dev
                    g++-mingw-w64-i686
                    g++-10-multilib
                    gcc-10-multilib
                    gcc-mingw-w64-i686-win32-runtime
                    g++-mingw-w64-i686-win32
                    gcc-mingw-w64-i686
                    mingw-w64-i686-dev
                    mingw-w64-common
                    libx11-dev
                    libcapstone-dev
                    dos2unix
                    pkgconf
                    python3
                    git
                    genisoimage

              - name: Adding optional support
                run:  |
                 echo "Downloading watcom"
                 wget -q https://github.com/open-watcom/open-watcom-v2/releases/download/Current-build/ow-snapshot.tar.xz
                 echo "Downloading djgpp"
                 wget -q https://github.com/andrewwutw/build-djgpp/releases/download/v3.4/djgpp-linux64-gcc1220.tar.bz2
                 mkdir watcom
                 echo "Extracting watcom"
                 tar xf ow-snapshot.tar.xz -C watcom
                 echo "Extracting djgpp"
                 tar xf djgpp-linux64-gcc1220.tar.bz2
                 cp -v djgpp/i586-pc-msdosdjgpp/bin/dxe* djgpp/bin

              - name: Compile wrappers
                run: |
                  echo "Adding Enviromental Variables"
                  export WATCOM=$(pwd)/watcom
                  export PATH=$WATCOM/binl64:$WATCOM/binl:$PATH
                  export EDPATH=$WATCOM/eddat
                  export INCLUDE=$WATCOM/lh
                  export PATH=$(pwd)/djgpp/bin:$PATH
                  echo "Compiling 3dfx wrappers"
                  cd wrappers/3dfx
                  mkdir build && cd build
                  bash ../../../scripts/conf_wrapper
                  make && make clean
                  echo "Compiling Mesa wrappers"
                  cd ../../mesa
                  mkdir build && cd build
                  bash ../../../scripts/conf_wrapper
                  make all+ && make clean

              - name: Installing wrappers
                working-directory: ./wrappers/iso
                run: |
                 echo "Making Wrapper Disk"
                 mkdir wrapfx
                 mkdir -p wrapgl/icd
                 cp -r ../3dfx/build/* ./wrapfx/
                 rm -r ./wrapfx/lib* ./wrapfx/Makefile
                 cp -r ../mesa/build/* ./wrapgl/
                 rm -r ./wrapgl/Makefile
                 echo $(git rev-parse HEAD) > commit\ id.txt
                 cp ../texts/readme.txt readme.txt
                 cp ../../LICENSE license.txt
                 cp ../texts/icd-enable.reg wrapgl/icd/icd-enable.reg
                 cp ../texts/readme_icd.txt wrapgl/icd/readme.txt
                 mv wrapgl/qmfxgl32.dll wrapgl/icd/qmfxgl32.dll
                 unix2dos autorun.inf open.bat readme.txt wrapgl/icd/readme.txt commit\ id.txt license.txt
                 mkisofs -JR -V 3DFX-WRAPPERS -o ../wrappers.iso ../iso
                 echo "Finished build at $(date)"

              - name: Uploading wrappers
                uses: actions/upload-artifact@v4
                with:
                  name: wrappers-${{ env.pkgver }}-artifact
                  path: ./wrappers
